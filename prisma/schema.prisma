generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Orders {
  id          String          @id @unique @default(uuid())
  userId      String?
  user        Users?          @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime        @default(now())
  status      String          @default("pending")
  totalPrice  Float           @default(0)
  products    DetailsOrder[]
  tableId     String
  table       Tables          @relation(fields: [tableId], references: [id])
}

model DetailsOrder {
  orderId     String
  productId   String
  quantity    Int             @default(1)
  price       Float
  order       Orders          @relation(fields: [orderId], references: [id])
  product     Products        @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@id([orderId, productId])
}

model Products {
  id          String          @id @unique @default(uuid())
  name        String
  description String
  price       Float           @default(0)
  files       Files[]
  categories  Categories[]    @relation("ProductCategories")
  inventory   Inventory[]
  orders      DetailsOrder[]
  promotions  Promotion[]     @relation("ProductPromotions")
}

model Files {
  id          String          @id @unique @default(uuid())
  productId   String
  product     Products        @relation(fields: [productId], references: [id])
  url         String
}

model Inventory {
  id          String          @id @unique @default(uuid())
  productId   String
  product     Products        @relation(fields: [productId], references: [id])
  quantity    Int             @default(0)
}

model Membership {
  id          String          @id @unique @default(uuid())
  name        String
  description String
  price       Float           @default(0)
  users       Users[]         @relation("MembershipUsers")
}

model Promotion {
  id          String          @id @unique @default(uuid())
  name        String
  description String?
  discountPercentage Float    @default(0)
  products    Products[]      @relation("ProductPromotions")
}

model Tables {
  id          String          @id @unique @default(uuid())
  name        String
  capacity    Int             @default(1)
  reservations Reservations[]
  orders      Orders[]
}

model Reservations {
  id          String          @id @unique @default(uuid())
  tableId     String
  table       Tables          @relation(fields: [tableId], references: [id])
  userId      String
  user        Users           @relation(fields: [userId], references: [id], onDelete: Cascade)
  date        DateTime
}

model Roles {
  id          String          @id @unique @default(uuid())
  name        String          @unique
  description String?
  users       Users[]         @relation("RoleUsers")
}

model Categories {
  id          String          @id @unique @default(uuid())
  name        String
  products    Products[]      @relation("ProductCategories")
}

model Users {
  id            String          @id @unique @default(uuid())
  name          String
  email         String          @unique
  password      String
  roleId        String
  role          Roles           @relation("RoleUsers", fields: [roleId], references: [id])
  membershipId  String?
  membership    Membership?     @relation("MembershipUsers", fields: [membershipId], references: [id])
  reservations  Reservations[]
  orders        Orders[]
}
